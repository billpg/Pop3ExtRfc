<?xml version="1.0" encoding="US-ASCII"?>

<?rfc strict="yes" ?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>
<rfc category="std" 
     docName="draft-billpg-pop3-sleeping-00" 
     ipr="none" 
     submissionType="IETF" 
     consensus="true"
     xmlns:xi="http://www.w3.org/2001/XInclude">

    <front>
        <title abbrev="POP3-SLEEPING">POP3 - SLEEPING Extension</title>
        <author fullname="William Godfrey" initials="W." surname="Godfrey">
            <organization>billpg industries</organization>
            <address>
                <uri>https://billpg.com/</uri>
            </address>
        </author>
        <date month="October" year="2022" />
        <area>General</area>
        <workgroup>Internet Engineering Task Force</workgroup>
        <keyword>pop3</keyword>
        <abstract>
            <t>
                An extension to POP3 allowing opened connections to be 
                shelved, avoiding the cost of repeated TCP and TLS handshakes 
                when polling for new messages and for message deletes to be 
                committed without having to disconnect.
            </t>
        </abstract>
    </front>

    <middle>
        <section title="Introduction">

            <t>
                When polling for new messages in a <xref target="RFC1939">POP3</xref> 
                mailbox, both client and server need to repeatedly re-negotitate TCP and
                TLS and re-authenticate every time the client attempts to poll for new messages.
                By allowing a client to keep an underlying connection open instead of closing
                it down, the client is at liberty to pick up an opened connection at 
                a later time and so avoid the burden of all the steps needed to reconnect.
            </t>

            <t>With this extension, the client may, instead of using the QUIT command, send a SLEE
            command. This will, like QUIT, commit those requests to delete messages. However, unlike
            the QUIT command, it will keep
            the underlying connection open, which the client may keep shelved. 
            After some time has passed and the client wishes to poll for
             new messages again, the client may find it already has an opened connection shelved
             and send it a WAKE command. The server will refresh its state and allow access to a 
             new set of messages.</t>

            <t>
                This document specifies an extension that enables this mode of operation.
                It introduces a new SLEEP state, alongside the established
                states, with commands to enter and leave this new state. During the SLEEP state, 
                the client remains authenticated and the underlying connection remains open, but 
                the associated mailbox is unlocked and inaccessable.
            </t>

            <t>
                The underlying connection that remains open includes the TLS channel if present, 
                including if that channel was opened by an explicit <xref target="RFC2595">STLS command</xref>
                or implied by <xref target="RFC8314">use of TCP port 995</xref>.
            </t>              

            <t>
                POP3 is designed to work within the simple bulk-download-and-delete model, 
                eschewing more advanced features such as folder management. This 
                extension maintains this model as the high-level operation of
                client and server is unchanged, only adding the ability to shelve an
                opened connection between polls.
            </t>

            <section title="Requirements Language">
                <t>
                    The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
                    "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
                    document are to be interpreted as described in 
                    <xref target="RFC2119">RFC 2119</xref>.
                </t>
            </section>
        </section>

    <section anchor="capability" title="Capability">
      <t>A service implementing this extension indicates support by including
      the capability "SLEEPING" in response to a CAPA command.</t>

      <section anchor="iana_capa_sleeping" title="SLEEPING Capability">
        <t>
          <list hangIndent="8" style="hanging">
            <t hangText="CAPA tag:"><vspace blankLines="0" />SLEEPING</t>
            <t hangText="Arguments:"><vspace blankLines="0" />none</t>
            <t hangText="Added commands:"><vspace blankLines="0" />SLEE, WAKE</t>
            <t hangText="Announced states / possible differences:"><vspace blankLines="0" />both / no</t>
            <t hangText="Commands valid in states:"><vspace blankLines="0" />SLEE in TRANSACTION, WAKE in SLEEP</t>
            <t hangText="Specification reference:"><vspace blankLines="0" />This document</t>
            <t hangText="Discussion:"><vspace blankLines="0" />
              The presence of the "SLEEPING" capability indicates the SLEEP state is supported and that the 
              SLEE and WAKE commands are supported to enter and leave this new state.
            </t>
          </list>
        </t>
      </section>
    </section>

    <section anchor="sleepstate" title="The SLEEP State">
      <t>
      This RFC introduces the SLEEP state, alongside the established states of AUTHORIZATION, TRANSACTION and UPDATE.
      </t>

      <t>During a SLEEP state, the underlying TCP and TLS connections remain open and active. Access to the mailbox 
      is not possible but the client nonetheless remains authenticated during this time.</t>

      <t>A client requests a state transition from TRANSACTION to SLEEP by a SLEE command, and from SLEEP to TRANSACTION
       by a WAKE command. The server responds with a success +OK response to either command to indicate the state transition
        is complete, or with an error -ERR response to indicate it can not transition state at this time and the connection 
        remains in the previous state.</t>
      
      <t>During the SLEEP state, the server MUST support the commands NOOP, QUIT and WAKE as described below. 
        The server SHOULD respond with an error  
          -ERR response to any other command that is not documented as valid for the SLEEP state.</t>

      <t>
            NOTE: This document STRONGLY encourages those services that place a lock on a mailbox during a TRANSACTION state
            to release those locks during a SLEEP state and allow other concurrent requests, re-aquiring that lock on the WAKE 
            command.
            It is permitted for the WAKE command to fail with a "-ERR [INUSE]" failure response if a separate connection has taken the
            lock for the mailbox during the SLEEP state.
      </t>
    </section>

      <section anchor="other_capabilities" title="Considerations for documented capabilities">
        <t>CAPA <xref target="RFC2449" /> is not on the list of commands that are valid to use during the SLEEP state. 
        Registered capabilities include a statement to which states each capability may be announced in, using "both" as a
        shorthand for "both the AUTHORIZATION and TRANSACTION states". As this document does not introduce a new state when the
        CAPA command may be used, this document does not change the meaning of any capabilities registered.
        </t>
      </section>

    <section anchor="slecommand" title="The SLEE Command">

      <t>The client sends a SLEE command to complete a TRANSACTION state session and transition to the SLEEP state.</t>
      
      <t> A server that
          responds to this command with a success +OK response MUST have deleted all messages flagged for deletion with DELE 
          (but not reverted by RSET) and MUST have transitioned this connection to the SLEEP state. If the server cannot 
          perform these steps, it MUST return an error -ERR response, remain in the TRANSACTION state and leave the state of 
          the mailbox unchanged.</t>

      <t>The client MUST wait for a response to this command before sending any additional commands, regardless of the presence
          of the <xref target="RFC2449">PIPELINING</xref> capability in the response to the CAPA command.</t>
    </section>

    <section anchor="wakecommand" title="The WAKE Command">
        <t>The client sends a WAKE command as a request to complete a SLEEP state session and start a new TRANSACTION state.</t>

        <t>
        If the server's response is a success +OK, the connection transitions to a new TRANSACTION state, as if the client had
        disconnected, reconnected and reauthenticated. The mailbox MAY have new messages and the numeric message-id values 
        assigned to messages MAY have been reassigned.</t>
        
        <t>If the server cannot transition to a new TRANSACTION state, it MUST respond with an error -ERR response. In this case, the
            connection will remain in the SLEEP state. If the server's CAPA response includes the "RESP-CODES" extension 
            <xref target="RFC2449" /> then the server MAY use response codes to assist identification of the underlying issue.</t> 
            
        <t>If the service's CAPA response includes "AUTH-RESP-CODE" <xref target="RFC3206" />
            then the response MAY use the [AUTH] response code to indicate the authentication credentials supplied during the 
            AUTHORIZATION state are no longer suitable.</t>
        
        <t>The server MAY use the response code [IN-USE] <xref target="RFC2449" /> to indicate access to the mailbox is locked
            while another entity is making use of the mailbox. Clients MAY try the WAKE command again after a brief delay.</t>
        
        <t>The server MAY use the response code [SYS] (including [SYS/TEMP] and [SYS/PERM]) as described in 
            <xref target="RFC3206" />.</t>
        
    </section>

    <section anchor="noopcommand" title="The NOOP Command">
        <t>The NOOP command is valid during the SLEEP state to keep an idle connection open. It has identical meaning and behavior
            as defined in <xref target="RFC1939" />.</t>
    </section>

    <section anchor="quitcommand" title="The QUIT Command">
        <t>The QUIT command is valid during the SLEEP state to request that the underlying connection is closed down. The server 
            MUST respond with a success +OK response and then close the underlying connection down.</t>
        
        <t>NOTE: As DELE is not one of the commands listed as valid for during the SLEEP state and any message deletes will have 
            been committed during handling of the SLEE command, the QUIT command's only purpose during
            the SLEEP state is to close down the underlying connection. There is no pratical difference in this state between 
            using QUIT and closing down the underlying connection from the client side, but the client may nonetheless prefer to use the
            same mechanism to close down an open connection which will work in any of the many states.</t>
    </section>


  </middle>

    <back>
        <references title="Normative References">
            <xi:include href="http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
            <xi:include href="http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1939.xml"/>
            <xi:include href="http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2595.xml"/>
            <xi:include href="http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8314.xml"/>
            <xi:include href="http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2449.xml"/>
            <xi:include href="http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3206.xml"/>
        </references>
    </back>

</rfc>


